# ===================================================================
# 这个文件包含ranger的默认启动命令。
# 要改变它们，建议创建/etc/ranger/rc.conf
# (全系统)或~/.config/ranger/rc.conf (每个用户)，并添加你的自定义
# 那里的命令。
#
# 如果你把这整个文件复制到那里，你可能想设置环境
# 变量RANGER_LOAD_DEFAULT_RC为FALSE，以避免加载两次。
#
# 这个文件的目的主要是为了定义键盘绑定和设置。
# 对于运行更复杂的Python代码，请在 "plugins/"或""创建一个插件。
# commands.py "中的一个命令。
#
# 每一行都是一个命令，将在用户界面前运行
# 被初始化。 因此，你不能使用那些依赖
# 在用户界面上，如:删除或:标记。
# ===================================================================

# ===================================================================
# == 选择
# ===================================================================

# 应该使用哪种视图模式？ 可能的值是。
#     米勒。使用显示多层次结构的米勒列
#     multipane。像Midnight-commander一样的多窗格视图，显示所有标签的下一个。
#                相互之间
set viewmode miller
#set viewmode multipane

# 有多少列，它们的相对宽度是多少？
set column_ratios 1,3,4

# 哪些文件应该被隐藏？(正则表达式)
set hidden_filter ^\.|\.(?:pyc|pyo|bak|swp)$|^lost\+found$|^__(py)?cache__$

# 显示隐藏的文件？你可以通过输入'zh'来切换这个功能。
set show_hidden true

# 文件图标
default_linemode devicons

# 无边框列可能会导致图像预览中出现条纹。
set draw_borders true

# 运行 "delete" 命令时要求确认？
# 有效值是 "always", "never", "multiple" (default)
# 如果是 "多个"，ranger只会询问你是否一次删除多个文件。
set confirm_on_delete multiple

# 为文件预览脚本使用非默认的路径？
# 在ranger中配备了scope.sh，这个脚本可以调用外部程序（见
# README.md的依赖性）来预览图像、档案等。
set preview_script ~/.config/ranger/scope.sh

# 使用外部预览脚本或显示简单的纯文本或图像预览？
set use_preview_script true

# 自动计算目录中的文件，甚至在进入这些文件之前？
set automatically_count_files true

# 运行某些图像查看器时，打开此目录中的所有图像
# 像feh或sxiv？ 你仍然可以通过标记来打开选定的文件。
set open_all_images true

# 要了解版本控制系统和显示信息。
set vcs_aware true

# git、hg、bzr、svn四个后台的状态。可能的状态是
# disabled, local (only show local info), enabled (show local and remote
# information).
# 禁用，本地（只显示本地信息），启用（显示本地和远程信息）。
set vcs_backend_git enabled
set vcs_backend_hg disabled
set vcs_backend_bzr disabled
set vcs_backend_svn disabled

# 在状态栏中显示长的提交信息时，将其截断为这个长度。
set vcs_msg_length 50

# 使用支持的图像预览协议之一
set preview_images true

# 设置预览图像的方法。支持的方法。
#
# * w3m (default):
#   用外部命令 "w3mimgpreview "预览全彩图像？
#   这需要控制台网络浏览器 "w3m "和一个支持的终端。
#   它已经成功地用 "xterm "和 "urxvt "进行了测试，没有tmux。
#
# * iterm2:
#   使用iTerm2图像预览器全彩预览图像
#   (http://iterm2.com/images.html). 这需要使用iTerm2编译的
#   支持图像预览。
#
#   This feature relies on the dimensions of the terminal's font.  By default, a
#   width of 8 and height of 11 are used.  To use other values, set the options
#   iterm2_font_width and iterm2_font_height to the desired values.
#   这一功能依赖于终端的字体尺寸。在默认情况下，使用 宽度为8，高度为11。
#   要使用其他值，请将选项 iterm2_font_width和iterm2_font_height设置为需要的值。
#
# * terminology:
#   Previews images in full color in the terminology terminal emulator.
#   Supports a wide variety of formats, even vector graphics like svg.
#
# * urxvt:
#   Preview images in full color using urxvt image backgrounds. This
#   requires using urxvt compiled with pixbuf support.
#
# * urxvt-full:
#   The same as urxvt but utilizing not only the preview pane but the
#   whole terminal window.
#
# * kitty:
#   Preview images in full color using kitty image protocol.
#   Requires python PIL or pillow library.
#   If ranger does not share the local filesystem with kitty
#   the transfer method is changed to encode the whole image;
#   while slower, this allows remote previews,
#   for example during an ssh session.
#   Tmux is unsupported.
#
# * ueberzug:
#   用外部命令 "ueberzug "预览全彩图像。
#   图像是通过使用子窗口显示的。
#   只针对在GNU/Linux中运行X11的用户。
set preview_images_method ueberzug

# 用w3m方法显示图像前的延迟，单位是秒。
# 在遇到显示器损坏的情况下，增加它。
set w3m_delay 0.02

# 当使用一个需要这样的终端时，手动调整w3mimg的偏移量
set w3m_offset 0

# 默认的iTerm2字体大小（见： preview_images_method: iterm2）。
set iterm2_font_width 8
set iterm2_font_height 11

# 使用unicode"... "字符来标记截止的文件名？
set unicode_ellipsis false

# 支持BIDI - 尝试正确显示RTL语言（希伯来语、阿拉伯语）的文件名。
# 需要 python-bidi pip 包。
set bidi_support false

# 在书签预览框中显示dotfiles？
set show_hidden_bookmarks true

# 使用哪种颜色方案？ 这些色系默认是可用的。
# default, jungle, snow, solarized
set colorscheme default

# 预览文件在最右边一栏？
# 如果没有什么要预览的，就把最后一列折叠（缩小）？
set preview_files true
set preview_directories true
set collapse_preview true

# 在纯文本预览中包裹长行？
set wrap_plaintext_previews false

# 退出时保存控制台历史记录？
set save_console_history true

# Draw the status bar on top of the browser window (default: bottom)
# 将状态栏画在浏览器窗口的顶部（默认：底部）。
set status_bar_on_top true

# 在状态栏中画出一个进度条，显示所有的平均状态。
# 目前正在运行的支持进度条的任务？
set draw_progress_bar_in_status_bar true

# Draw borders around columns? (separators, outline, both, or none)
# 在列周围绘制边框？(分隔符、轮廓、两者都有或没有)
# 分隔符是列之间的垂直线。
# 大纲在所有列的周围画出一个方框。
# 两者结合起来。
set draw_borders none

# 在标签中显示目录名称？
set dirname_in_tabs true

# 启用鼠标支持？
set mouse_enabled true

# 在主栏或状态栏中显示文件大小？
set display_size_in_main_column true
set display_size_in_status_bar true

# 在状态栏中显示可用磁盘空间？
set display_free_space_in_status_bar true

# 在所有列中显示文件标签还是只在主列中显示？
set display_tags_in_all_columns true

# 为窗口设置一个标题？同时更新`WM_NAME`和`WM_ICON_NAME`。
set update_title true

# 将tmux/screen的窗口名称设为 "ranger"？
set update_tmux_title true

# 如果标题变长就缩短？ 这个数字定义了多少个
# 列表中的所有目录都是一次性显示的，0将关闭这一功能。
set shorten_title 3

# 在标题栏中显示主机名？
set hostname_in_titlebar true

# 在ranger的标题栏（第一行）中用~来缩写$HOME？
set tilde_in_titlebar true

# 历史上应该保留多少次目录变化或控制台命令？
set max_history_size 20
set max_console_history_size 50

# 滚动时尽量在上/下边框之间保持这么大的空间。
set scroll_offset 8

# 每次按键后都要刷新输入吗？ (当游侠滞后时可以注意到)。
set flushinput true

# 在没有预览的情况下，右边有填充物？
# 这允许你点击进入空间来运行该文件。
set padding_right true

# 即时保存书签（与mX和`X一起使用）？
# 这有助于在多个游侠之间同步书签。
# 实例，但会导致*轻微的性能损失。
# 如果是假的，书签会在退出ranger时被保存。
set autosave_bookmarks true

# 将"`"书签保存到磁盘。 这可以用来切换到最后一个
# 通过键入"``"，就可以看到目录。
set save_backtick_bookmark true

# 你可以通过使用以下方法来显示目录的 "真实 "累积大小
# 命令:get_cumulative_size或键入 "dc"。 该大小是昂贵的，以
# 计算，不会自动更新。 你可以选择
# 通过打开这个选项，可以自动更新它。
set autoupdate_cumulative_size true

# 开启这个功能对屏幕阅读器来说是有意义的。
set show_cursor false

# 其中之一：size、natural、basename、atime、ctime、mtime、type、random
set sort natural

# 额外的排序选项
set sort_reverse false
set sort_case_insensitive true
set sort_directories_first true
set sort_unicode false

# 如果使用Alt键的组合键对你不起作用，就启用这个功能。
# (特别是在xterm上)
set xterm_alt_key false

# 是否在cd命令中包括书签
set cd_bookmarks true

# 改变cd命令标签完成时的大小写敏感性
set cd_tab_case sensitive

# U在 "cd "命令中使用模糊的制表符完成。比如说。
# ":cd /u/lo/b<tab>" 扩大到 ":cd /usr/local/bin".
set cd_tab_fuzzy true

# 避免预览大于此大小的文件，单位为字节。 使用0的值来
# 禁用此功能。
set preview_max_size 0

# 达到这个大小的关键提示列表有其子列表的扩展。
# 否则，子图将被替换成"..."。
set hint_collapse_threshold 10

# 将突出显示的文件添加到标题栏的路径中
set show_selection_in_titlebar true

# ranger空闲时等待用户输入的延迟时间，以毫秒为单位。
# 的分辨率为100ms。 较低的延迟减少了目录更新之间的滞后，但
# 增加CPU负载。
set idle_delay 2000

# 当元数据管理器模块寻找元数据时，它应该只寻找
# 在当前目录下的".metadata.json "文件，或者做一个深入的搜索并
# 也要检查当前目录以上的所有目录吗？
set metadata_deep_search false

# 离开一个目录时清除所有现有的过滤器
set clear_filters_on_dir_change false

# 禁用在主栏中显示行号。
# Possible values: false, absolute, relative.
set line_numbers relative

# 当line_numbers=relative时，显示绝对行数在
# 当前行。
set relative_current_zero false

# 行数从1开始，而不是从0开始
set one_indexed true

# 退出时保存标签
set save_tabs_on_exit false

# 启用滚动包装--在最后一个项目上向下移动时，将环绕至
# 顶端，反之亦然。
set wrap_scroll false

# 将global_inode_type_filter设为空。 可能的选项：d、f和l，用于
# 分别是目录、文件和符号链接。
set global_inode_type_filter

# 这个设置允许冻结文件列表以节省I/O带宽。 它
# 在启动过程中应该是 "false"，但你可以按F键来切换它。
set freeze_files false

# 以字节为单位打印文件大小，而不是默认的人类可读格式。
set size_in_bytes false

# 如果RANGER_LEVEL环境变量大于0，在启动时发出警告，换句话说就是
# 当你在ranger启动的子壳中嵌套ranger时，会给出警告。
# 特殊值 "错误 "使警告更加明显。
set nested_ranger_warning true

# ===================================================================
# == 本地选择
# ===================================================================
# 你可以设置只影响一个目录的本地选项。

# Examples:
# setlocal path=~/downloads sort mtime

# ===================================================================
# == 控制台中的命令别名
# ===================================================================

alias e     edit
alias q     quit
alias q!    quit!
alias qa    quitall
alias qa!   quitall!
alias qall  quitall
alias qall! quitall!
alias setl  setlocal

alias filter     scout -prts
alias find       scout -aets
alias mark       scout -mr
alias unmark     scout -Mr
alias search     scout -rs
alias search_inc scout -rts
alias travel     scout -aefklst

# ===================================================================
# == 为浏览器定义按键
# ===================================================================

# 基本
map     Q quitall
map     q quit
copymap q ZZ ZQ

map R     reload_cwd
map F     set freeze_files!
map <C-r> reset
map <C-l> redraw_window
map <C-c> abort
map <esc> change_mode normal
map ~ set viewmode!

map i display_file
map <A-j> scroll_preview 1
map <A-k> scroll_preview -1
map ? help
map W display_log
map w taskview_open
map S shell $SHELL

map :  console
map ;  console
map !  console shell%space
map @  console -p6 shell  %%s
map #  console shell -p%space
map s  console shell%space
map r  chain draw_possible_programs; console open_with%space
map f  console find%space
map cd console cd%space

map <C-p> chain console; eval fm.ui.console.history_move(-1)

# 改变线路模式
map Mf linemode filename
map Mi linemode fileinfo
map Mm linemode mtime
map Mh linemode humanreadablemtime
map Mp linemode permissions
map Ms linemode sizemtime
map MH linemode sizehumanreadablemtime
map Mt linemode metatitle

# 标签/标记
map t       tag_toggle
map ut      tag_remove
map "<any>  tag_toggle tag=%any
map <Space> mark_files toggle=True
map v       mark_files all=True toggle=True
map uv      mark_files all=True val=False
map V       toggle_visual_mode
map uV      toggle_visual_mode reverse=True

# 对于怀旧的人来说："午夜指挥官 "捆绑装置
map <F1> help
map <F2> rename_append
map <F3> display_file
map <F4> edit
map <F5> copy
map <F6> cut
map <F7> console mkdir%space
map <F8> console delete
#map <F8> console trash
map <F10> exit

# 如果你使用的是Dvorak布局的键盘
map <UP>       move up=1
map <DOWN>     move down=1
map <LEFT>     move left=1
map <RIGHT>    move right=1
map <HOME>     move to=0
map <END>      move to=-1
map <PAGEDOWN> move down=1   pages=True
map <PAGEUP>   move up=1     pages=True
map <CR>       move right=1
#map <DELETE>   console delete
map <INSERT>   console touch%space

# 类似VIM
copymap <UP>       k
copymap <DOWN>     j
copymap <LEFT>     h
copymap <RIGHT>    l
copymap <HOME>     gg
copymap <END>      G
copymap <PAGEDOWN> <C-F>
copymap <PAGEUP>   <C-B>

map J  move down=0.5  pages=True
map K  move up=0.5    pages=True
copymap J <C-D>
copymap K <C-U>

# 跳来跳去
map H     history_go -1
map L     history_go 1
map ]     move_parent 1
map [     move_parent -1
map }     traverse
map {     traverse_backwards
map )     jump_non

map gh cd ~
map ge cd /etc
map gu cd /usr
map gd cd /dev
map gl cd -r .
map gL cd -r %f
map go cd /opt
map gv cd /var
map gm cd /media
map gi eval fm.cd('/run/media/' + os.getenv('USER'))
map gM cd /mnt
map gs cd /srv
map gp cd /tmp
map gr cd /
map gR eval fm.cd(ranger.RANGERDIR)
map g/ cd /
map g? cd /usr/share/doc/ranger

# 外部项目
map E  edit
map du shell -p du --max-depth=1 -h --apparent-size
map dU shell -p du --max-depth=1 -h --apparent-size | sort -rh
map yp yank path
map yd yank dir
map yn yank name
map y. yank name_without_extension

# 文件系统操作
map =  chmod

map cw console rename%space
map a  rename_append
map A  eval fm.open_console('rename ' + fm.thisfile.relative_path.replace("%", "%%"))
map I  eval fm.open_console('rename ' + fm.thisfile.relative_path.replace("%", "%%"), position=7)

map pp paste
map po paste overwrite=True
map pP paste append=True
map pO paste overwrite=True append=True
map pl paste_symlink relative=False
map pL paste_symlink relative=True
map phl paste_hardlink
map pht paste_hardlinked_subtree
map pd console paste dest=
map p`<any> paste dest=%any_path
map p'<any> paste dest=%any_path

map dD console delete
map dT console trash

map dd cut
map ud uncut
map da cut mode=add
map dr cut mode=remove
map dt cut mode=toggle

map yy copy
map uy uncut
map ya copy mode=add
map yr copy mode=remove
map yt copy mode=toggle

# 临时性的变通办法
map dgg eval fm.cut(dirarg=dict(to=0), narg=quantifier)
map dG  eval fm.cut(dirarg=dict(to=-1), narg=quantifier)
map dj  eval fm.cut(dirarg=dict(down=1), narg=quantifier)
map dk  eval fm.cut(dirarg=dict(up=1), narg=quantifier)
map ygg eval fm.copy(dirarg=dict(to=0), narg=quantifier)
map yG  eval fm.copy(dirarg=dict(to=-1), narg=quantifier)
map yj  eval fm.copy(dirarg=dict(down=1), narg=quantifier)
map yk  eval fm.copy(dirarg=dict(up=1), narg=quantifier)

# 搜索
map /  console search%space
map n  search_next
map N  search_next forward=False
map ct search_next order=tag
map cs search_next order=size
map ci search_next order=mimetype
map cc search_next order=ctime
map cm search_next order=mtime
map ca search_next order=atime

# 标签
map <C-n>     tab_new
map <C-w>     tab_close
map <TAB>     tab_move 1
map <S-TAB>   tab_move -1
map <A-Right> tab_move 1
map <A-Left>  tab_move -1
map gt        tab_move 1
map gT        tab_move -1
map gn        tab_new
map gc        tab_close
map uq        tab_restore
map <a-1>     tab_open 1
map <a-2>     tab_open 2
map <a-3>     tab_open 3
map <a-4>     tab_open 4
map <a-5>     tab_open 5
map <a-6>     tab_open 6
map <a-7>     tab_open 7
map <a-8>     tab_open 8
map <a-9>     tab_open 9
map <a-r>     tab_shift 1
map <a-l>     tab_shift -1

# 分拣
map or set sort_reverse!
map oz set sort=random
map os chain set sort=size;      set sort_reverse=False
map ob chain set sort=basename;  set sort_reverse=False
map on chain set sort=natural;   set sort_reverse=False
map om chain set sort=mtime;     set sort_reverse=False
map oc chain set sort=ctime;     set sort_reverse=False
map oa chain set sort=atime;     set sort_reverse=False
map ot chain set sort=type;      set sort_reverse=False
map oe chain set sort=extension; set sort_reverse=False

map oS chain set sort=size;      set sort_reverse=True
map oB chain set sort=basename;  set sort_reverse=True
map oN chain set sort=natural;   set sort_reverse=True
map oM chain set sort=mtime;     set sort_reverse=True
map oC chain set sort=ctime;     set sort_reverse=True
map oA chain set sort=atime;     set sort_reverse=True
map oT chain set sort=type;      set sort_reverse=True
map oE chain set sort=extension; set sort_reverse=True

map dc get_cumulative_size

# 设置
map zc    set collapse_preview!
map zd    set sort_directories_first!
map zh    set show_hidden!
map <C-h> set show_hidden!
copymap <C-h> <backspace>
copymap <backspace> <backspace2>
map zI    set flushinput!
map zi    set preview_images!
map zm    set mouse_enabled!
map zp    set preview_files!
map zP    set preview_directories!
map zs    set sort_case_insensitive!
map zu    set autoupdate_cumulative_size!
map zv    set use_preview_script!
map zf    console filter%space
copymap zf zz

# 滤波器组
map .d filter_stack add type d
map .f filter_stack add type f
map .l filter_stack add type l
map .m console filter_stack add mime%space
map .n console filter_stack add name%space
map .# console filter_stack add hash%space
map ." filter_stack add duplicate
map .' filter_stack add unique
map .| filter_stack add or
map .& filter_stack add and
map .! filter_stack add not
map .r filter_stack rotate
map .c filter_stack clear
map .* filter_stack decompose
map .p filter_stack pop
map .. filter_stack show

# 书签
map `<any>  enter_bookmark %any
map '<any>  enter_bookmark %any
map m<any>  set_bookmark %any
map um<any> unset_bookmark %any

map m<bg>   draw_bookmarks
copymap m<bg>  um<bg> `<bg> '<bg>

# 在一些python的帮助下，生成所有的chmod绑定。
eval for arg in "rwxXst": cmd("map +u{0} shell -f chmod u+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map +g{0} shell -f chmod g+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map +o{0} shell -f chmod o+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map +a{0} shell -f chmod a+{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map +{0}  shell -f chmod u+{0} %s".format(arg))

eval for arg in "rwxXst": cmd("map -u{0} shell -f chmod u-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -g{0} shell -f chmod g-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -o{0} shell -f chmod o-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -a{0} shell -f chmod a-{0} %s".format(arg))
eval for arg in "rwxXst": cmd("map -{0}  shell -f chmod u-{0} %s".format(arg))

# ===================================================================
# == 定义控制台的按键
# ===================================================================
# 注意：未映射的键会直接传递给控制台。

# 基本
cmap <tab>   eval fm.ui.console.tab()
cmap <s-tab> eval fm.ui.console.tab(-1)
cmap <ESC>   eval fm.ui.console.close()
cmap <CR>    eval fm.ui.console.execute()
cmap <C-l>   redraw_window

copycmap <ESC> <C-c>
copycmap <CR>  <C-j>

# 左右移动
cmap <up>    eval fm.ui.console.history_move(-1)
cmap <down>  eval fm.ui.console.history_move(1)
cmap <left>  eval fm.ui.console.move(left=1)
cmap <right> eval fm.ui.console.move(right=1)
cmap <home>  eval fm.ui.console.move(right=0, absolute=True)
cmap <end>   eval fm.ui.console.move(right=-1, absolute=True)
cmap <a-b> eval fm.ui.console.move_word(left=1)
cmap <a-f> eval fm.ui.console.move_word(right=1)

copycmap <a-b> <a-left>
copycmap <a-f> <a-right>

# 线路编辑
cmap <backspace>  eval fm.ui.console.delete(-1)
cmap <delete>     eval fm.ui.console.delete(0)
cmap <C-w>        eval fm.ui.console.delete_word()
cmap <A-d>        eval fm.ui.console.delete_word(backward=False)
cmap <C-k>        eval fm.ui.console.delete_rest(1)
cmap <C-u>        eval fm.ui.console.delete_rest(-1)
cmap <C-y>        eval fm.ui.console.paste()

# 当然还有emacs的方式
copycmap <ESC>       <C-g>
copycmap <up>        <C-p>
copycmap <down>      <C-n>
copycmap <left>      <C-b>
copycmap <right>     <C-f>
copycmap <home>      <C-a>
copycmap <end>       <C-e>
copycmap <delete>    <C-d>
copycmap <backspace> <C-h>

# 注意：有多种方法来表达退格。 <退格> (代码 263)
# 和<backspace2>（代码127）。 为确定起见，请同时使用。
copycmap <backspace> <backspace2>

# 这种特殊的表达方式允许输入数字。
cmap <allow_quantifiers> false

# ===================================================================
# == 呼叫器按键绑定
# ===================================================================

# 运动
pmap  <down>      pager_move  down=1
pmap  <up>        pager_move  up=1
pmap  <left>      pager_move  left=4
pmap  <right>     pager_move  right=4
pmap  <home>      pager_move  to=0
pmap  <end>       pager_move  to=-1
pmap  <pagedown>  pager_move  down=1.0  pages=True
pmap  <pageup>    pager_move  up=1.0    pages=True
pmap  <C-d>       pager_move  down=0.5  pages=True
pmap  <C-u>       pager_move  up=0.5    pages=True

copypmap <UP>       k  <C-p>
copypmap <DOWN>     j  <C-n> <CR>
copypmap <LEFT>     h
copypmap <RIGHT>    l
copypmap <HOME>     g
copypmap <END>      G
copypmap <C-d>      d
copypmap <C-u>      u
copypmap <PAGEDOWN> n  f  <C-F>  <Space>
copypmap <PAGEUP>   p  b  <C-B>

# 基本
pmap     <C-l> redraw_window
pmap     <ESC> pager_close
copypmap <ESC> q Q i <F3>
pmap E      edit_file

# ===================================================================
# == 任务视图绑定键
# ===================================================================

# 运动
tmap <up>        taskview_move up=1
tmap <down>      taskview_move down=1
tmap <home>      taskview_move to=0
tmap <end>       taskview_move to=-1
tmap <pagedown>  taskview_move down=1.0  pages=True
tmap <pageup>    taskview_move up=1.0    pages=True
tmap <C-d>       taskview_move down=0.5  pages=True
tmap <C-u>       taskview_move up=0.5    pages=True

copytmap <UP>       k  <C-p>
copytmap <DOWN>     j  <C-n> <CR>
copytmap <HOME>     g
copytmap <END>      G
copytmap <C-u>      u
copytmap <PAGEDOWN> n  f  <C-F>  <Space>
copytmap <PAGEUP>   p  b  <C-B>

# 改变优先级和删除任务
tmap J          eval -q fm.ui.taskview.task_move(-1)
tmap K          eval -q fm.ui.taskview.task_move(0)
tmap dd         eval -q fm.ui.taskview.task_remove()
tmap <pagedown> eval -q fm.ui.taskview.task_move(-1)
tmap <pageup>   eval -q fm.ui.taskview.task_move(0)
tmap <delete>   eval -q fm.ui.taskview.task_remove()

# 基本
tmap <C-l> redraw_window
tmap <ESC> taskview_close
copytmap <ESC> q Q w <C-c>

# 移至废纸篓
#map DD shell mv %s /home/qq/.local/share/Trash/files/
map DD shell gio trash %s

# 解压缩快捷方式
map ex extract
map ec compress